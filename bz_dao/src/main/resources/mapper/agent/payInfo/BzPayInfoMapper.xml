<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bz.dao.mapper.agent.BzPayInfoMapper">
  <resultMap id="BaseResultMap" type="com.bz.dao.pojo.agent.BzPayInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="createTime" jdbcType="VARCHAR" property="createtime" />
    <result column="paymentState" jdbcType="VARCHAR" property="paymentstate" />
    <result column="paymentReason" jdbcType="VARCHAR" property="paymentreason" />
    <result column="paymentAccount" jdbcType="VARCHAR" property="paymentaccount" />
    <result column="isShow" jdbcType="INTEGER" property="isshow" />
  </resultMap>
  <sql id="Base_Column_List">
    id, createTime, paymentState, paymentReason, paymentAccount, isShow
  </sql>
  <insert id="insertSelective" parameterType="com.bz.dao.pojo.agent.BzPayInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bz_pay_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createtime != null">
        createTime,
      </if>
      <if test="paymentstate != null">
        paymentState,
      </if>
      <if test="paymentreason != null">
        paymentReason,
      </if>
      <if test="paymentaccount != null">
        paymentAccount,
      </if>
      <if test="isshow != null">
        isShow,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="paymentstate != null">
        #{paymentstate,jdbcType=VARCHAR},
      </if>
      <if test="paymentreason != null">
        #{paymentreason,jdbcType=VARCHAR},
      </if>
      <if test="paymentaccount != null">
        #{paymentaccount,jdbcType=VARCHAR},
      </if>
      <if test="isshow != null">
        #{isshow,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bz.dao.pojo.agent.BzPayInfo">
    update bz_pay_info
    <set>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="paymentstate != null">
        paymentState = #{paymentstate,jdbcType=VARCHAR},
      </if>
      <if test="paymentreason != null">
        paymentReason = #{paymentreason,jdbcType=VARCHAR},
      </if>
      <if test="paymentaccount != null">
        paymentAccount = #{paymentaccount,jdbcType=VARCHAR},
      </if>
      <if test="isshow != null">
        isShow = #{isshow,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="sql_columns">
    id,createTime,paymentState,paymentReason,paymentAccount,isShow
  </sql>
  <sql id="sql_where">
    <if test="item !=null "> 
 <where>
      <if test="null != item.id">and id = #{item.id}</if>
      <if test="null != item.createtime and '' != item.createtime">and createTime = #{item.createtime}</if>
      <if test="null != item.paymentstate and '' != item.paymentstate">and paymentState = #{item.paymentstate}</if>
      <if test="null != item.paymentreason and '' != item.paymentreason">and paymentReason = #{item.paymentreason}</if>
      <if test="null != item.paymentaccount and '' != item.paymentaccount">and paymentAccount = #{item.paymentaccount}</if>
      <if test="null != item.isshow">and isShow = #{item.isshow}</if>
	</where> 
 </if>
  </sql>
  <select id="selectById" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from bz_pay_info where id = #{id}
  </select>
  <select id="selectOne" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from bz_pay_info <include refid="sql_where" /> limit 1
  </select>
  <select id="selectList" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from bz_pay_info <include refid="sql_where" />  order by id desc
  </select>
  <sql id="sql_save_columns">
    insert into bz_pay_info(
	  <if test="null != item.id"> id</if>
	  <if test="null != item.createtime">, createTime</if>
	  <if test="null != item.paymentstate">, paymentState</if>
	  <if test="null != item.paymentreason">, paymentReason</if>
	  <if test="null != item.paymentaccount">, paymentAccount</if>
	  <if test="null != item.isshow">, isShow</if>
	) values
  </sql>
  <sql id="sql_save_values">
    (
	  <if test="null != item.id"> #{item.id}</if>
	  <if test="null != item.createtime">, #{item.createtime}</if>
	  <if test="null != item.paymentstate">, #{item.paymentstate}</if>
	  <if test="null != item.paymentreason">, #{item.paymentreason}</if>
	  <if test="null != item.paymentaccount">, #{item.paymentaccount}</if>
	  <if test="null != item.isshow">, #{item.isshow}</if>
	)
  </sql>
  <insert id="save" keyProperty="item.id" useGeneratedKeys="true">
    <include refid="sql_save_columns" /><include refid="sql_save_values" />
  </insert>
  <insert id="batchSave">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="sql_save_columns" /><include refid="sql_save_values" />
	</foreach>
  </insert>
  <sql id="sql_update">
    update bz_pay_info
 <set> 
      <if test="null != item.id">id = #{item.id},</if>
      <if test="null != item.createtime">createTime = #{item.createtime},</if>
      <if test="null != item.paymentstate">paymentState = #{item.paymentstate},</if>
      <if test="null != item.paymentreason">paymentReason = #{item.paymentreason},</if>
      <if test="null != item.paymentaccount">paymentAccount = #{item.paymentaccount},</if>
      <if test="null != item.isshow">isShow = #{item.isshow},</if>
</set>	where id = #{item.id}
  </sql>
  <update id="update">
    <include refid="sql_update" />
  </update>
  <update id="batchUpdate">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="sql_update" />
	</foreach>
  </update>
  <delete id="delArray">
    delete from bz_pay_info where id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delList">
    delete from bz_pay_info where id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delByCondition">
     update bz_pay_info set isDelete=1 <include refid="sql_where" />
  </delete>
  <delete id="delById">
     update bz_pay_info set isDelete=1  where id =#{id} 
  </delete>
</mapper>