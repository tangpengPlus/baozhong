<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bz.dao.mapper.pay.PayRecordMapper">
  <resultMap id="BaseResultMap" type="com.bz.dao.pojo.pay.PayRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderNo" jdbcType="VARCHAR" property="orderno" />
    <result column="payType" jdbcType="INTEGER" property="paytype" />
    <result column="payMoney" jdbcType="DECIMAL" property="paymoney" />
    <result column="payTime" jdbcType="TIMESTAMP" property="paytime" />
    <result column="payState" jdbcType="INTEGER" property="paystate" />
    <result column="notifyTime" jdbcType="TIMESTAMP" property="notifytime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, orderNo, payType, payMoney, payTime, payState, notifyTime
  </sql>
  <insert id="insertSelective" parameterType="com.bz.dao.pojo.pay.PayRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pay_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderno != null">
        orderNo,
      </if>
      <if test="paytype != null">
        payType,
      </if>
      <if test="paymoney != null">
        payMoney,
      </if>
      <if test="paytime != null">
        payTime,
      </if>
      <if test="paystate != null">
        payState,
      </if>
      <if test="notifytime != null">
        notifyTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderno != null">
        #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null">
        #{paytype,jdbcType=INTEGER},
      </if>
      <if test="paymoney != null">
        #{paymoney,jdbcType=DECIMAL},
      </if>
      <if test="paytime != null">
        #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="paystate != null">
        #{paystate,jdbcType=INTEGER},
      </if>
      <if test="notifytime != null">
        #{notifytime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bz.dao.pojo.pay.PayRecord">
    update pay_record
    <set>
      <if test="orderno != null">
        orderNo = #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null">
        payType = #{paytype,jdbcType=INTEGER},
      </if>
      <if test="paymoney != null">
        payMoney = #{paymoney,jdbcType=DECIMAL},
      </if>
      <if test="paytime != null">
        payTime = #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="paystate != null">
        payState = #{paystate,jdbcType=INTEGER},
      </if>
      <if test="notifytime != null">
        notifyTime = #{notifytime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="sql_columns">
    id,orderNo,payType,payMoney,payTime,payState,notifyTime
  </sql>
  <sql id="sql_where">
    <if test="item !=null "> 
 <where>
      <if test="null != item.id">and id = #{item.id}</if>
      <if test="null != item.orderno and '' != item.orderno">and orderNo = #{item.orderno}</if>
      <if test="null != item.paytype">and payType = #{item.paytype}</if>
      <if test="null != item.paymoney and '' != item.paymoney">and payMoney = #{item.paymoney}</if>
      <if test="null != item.paytime and '' != item.paytime">and payTime = #{item.paytime}</if>
      <if test="null != item.paystate">and payState = #{item.paystate}</if>
      <if test="null != item.notifytime and '' != item.notifytime">and notifyTime = #{item.notifytime}</if>
	</where> 
 </if>
  </sql>
  <select id="selectById" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from pay_record where id = #{id}
  </select>
  <select id="selectOne" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from pay_record <include refid="sql_where" /> limit 1
  </select>
  <select id="selectList" resultMap="BaseResultMap">
    select <include refid="sql_columns" /> from pay_record <include refid="sql_where" />  order by id desc
  </select>
  <sql id="sql_save_columns">
    insert into pay_record(
	  <if test="null != item.orderno"> orderNo</if>
	  <if test="null != item.paytype">, payType</if>
	  <if test="null != item.paymoney">, payMoney</if>
	  <if test="null != item.paytime">, payTime</if>
	  <if test="null != item.paystate">, payState</if>
	  <if test="null != item.notifytime">, notifyTime</if>
	) values
  </sql>
  <sql id="sql_save_values">
    (
	  <if test="null != item.orderno"> #{item.orderno}</if>
	  <if test="null != item.paytype">, #{item.paytype}</if>
	  <if test="null != item.paymoney">, #{item.paymoney}</if>
	  <if test="null != item.paytime">, #{item.paytime}</if>
	  <if test="null != item.paystate">, #{item.paystate}</if>
	  <if test="null != item.notifytime">, #{item.notifytime}</if>
	)
  </sql>
  <insert id="save" keyProperty="item.id" useGeneratedKeys="true">
    <include refid="sql_save_columns" /><include refid="sql_save_values" />
  </insert>
  <insert id="batchSave">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="sql_save_columns" /><include refid="sql_save_values" />
	</foreach>
  </insert>
  <sql id="sql_update">
    update pay_record
 <set> 
      <if test="null != item.orderno">orderNo = #{item.orderno},</if>
      <if test="null != item.paytype">payType = #{item.paytype},</if>
      <if test="null != item.paymoney">payMoney = #{item.paymoney},</if>
      <if test="null != item.paytime">payTime = #{item.paytime},</if>
      <if test="null != item.paystate">payState = #{item.paystate},</if>
      <if test="null != item.notifytime">notifyTime = #{item.notifytime},</if>
</set>	where id = #{item.id}
  </sql>
  <update id="update">
    <include refid="sql_update" />
  </update>
  <update id="batchUpdate">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="sql_update" />
	</foreach>
  </update>
  <!-- 更改订单支付记录 -->
  <update id="updatePayRecordInfo">
  update pay_record set payState=#{state},notifyTime=#{notifyDate} where orderNo=#{orderNumber}
  </update>
  <delete id="delArray">
    delete from pay_record where id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delList">
    delete from pay_record where id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delByCondition">
     update pay_record set isDelete=1 <include refid="sql_where" />
  </delete>
  <delete id="delById">
     update pay_record set isDelete=1  where id =#{id} 
  </delete>
</mapper>