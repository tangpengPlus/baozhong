package com.bz.dao.pojo.merchant;

import com.bz.framework.pojo.base.BasePojo;
import java.util.Date;

/**
	* 作者:唐鹏
	* 描述:
	* 版本: version 1.0.0
	* 时间:2017-11-20 15:13:41
  */
public class MerchantServerStatus extends BasePojo {
    /**
     * 添加数据的id
     * 表字段 : merchant_server_status.id
     */
    private Integer id;

    /**
     * 添加数据的编号
     * 表字段 : merchant_server_status.number
     */
    private String number;

    /**
     * 关联商户编号
     * 表字段 : merchant_server_status.merchant_id
     */
    private Integer merchantId;

    /**
     * 创建时间
     * 表字段 : merchant_server_status.createtime
     */
    private Date createtime;

    /**
     * 聚合支付状态：0表示未开启，1表示开启
     * 表字段 : merchant_server_status.aggregatePayStatus
     */
    private Integer aggregatepaystatus;

    /**
     * 信用卡付款方式：0表示未开启；1表示开启
     * 表字段 : merchant_server_status.creditCardStatus
     */
    private Integer creditcardstatus;

    /**
     * 客户积累状态：0表示开启；1表示未开启
     * 表字段 : merchant_server_status.customersAccumulateStatus
     */
    private Integer customersaccumulatestatus;

    /**
     * 多机收信息状态：0表示未开启，1表示开启
     * 表字段 : merchant_server_status.phonesMessageStatus
     */
    private Integer phonesmessagestatus;

    /**
     * 网店开启状态：0表示开启；1表示未开启
     * 表字段 : merchant_server_status.onlineStoreStatus
     */
    private Integer onlinestorestatus;

    /**
     * 付前广告开启状态：0表示未开启，1表示已开启
     * 表字段 : merchant_server_status.payBeforeAdvertisingStatus
     */
    private Integer paybeforeadvertisingstatus;

    /**
     * 小票广告开启状态：0表示未开启，1表示已开启
     * 表字段 : merchant_server_status.receiptsStatus
     */
    private Integer receiptsstatus;

    /**
     * 开地图点状态：0表示未开启，1表示已开启
     * 表字段 : merchant_server_status.storeMapStatus
     */
    private Integer storemapstatus;

    /**
     * 销售统计状态：0表示未开启，1表示已开启
     * 表字段 : merchant_server_status.salesStatisticsStatus
     */
    private Integer salesstatisticsstatus;

    /**
     * 支付详情状态：0表示未开启，1表示已开启
     * 表字段 : merchant_server_status.paymentDetailsStatus
     */
    private Integer paymentdetailsstatus;

    /**
     * 服务联系状态:0表示未开启，1表示已开启
     * 表字段 : merchant_server_status.serviceLinksStatus
     */
    private Integer servicelinksstatus;

    /**
     * 红包发券状态：0表示开启，1表示未开启
     * 表字段 : merchant_server_status.grantRedpacketStatus
     */
    private Integer grantredpacketstatus;

    /**
     * 信息群发状态：0表示未开启，1表示已开启
     * 表字段 : merchant_server_status.groupsStatus
     */
    private Integer groupsstatus;

    /**
     * 付后广告状态：0表示未开启，1表示已开启
     * 表字段 : merchant_server_status.payAfterAdvertisingStatus
     */
    private Integer payafteradvertisingstatus;

    /**
     * 是否有效：0表示无效，1表示有效
     * 表字段 : merchant_server_status.isdelete
     */
    private Integer isdelete;

    /**
     * 商家红包券手续费
     * 表字段 : merchant_server_status.redPackagePay
     */
    private Double redpackagepay;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table merchant_server_status
     *
     * @mbg.generated Mon Nov 20 15:13:41 CST 2017
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取 添加数据的id 字段:merchant_server_status.id
     *
     * @return merchant_server_status.id, 添加数据的id
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置 添加数据的id 字段:merchant_server_status.id
     *
     * @param id the value for merchant_server_status.id, 添加数据的id
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获取 添加数据的编号 字段:merchant_server_status.number
     *
     * @return merchant_server_status.number, 添加数据的编号
     */
    public String getNumber() {
        return number;
    }

    /**
     * 设置 添加数据的编号 字段:merchant_server_status.number
     *
     * @param number the value for merchant_server_status.number, 添加数据的编号
     */
    public void setNumber(String number) {
        this.number = number;
    }

    /**
     * 获取 关联商户编号 字段:merchant_server_status.merchant_id
     *
     * @return merchant_server_status.merchant_id, 关联商户编号
     */
    public Integer getMerchantId() {
        return merchantId;
    }

    /**
     * 设置 关联商户编号 字段:merchant_server_status.merchant_id
     *
     * @param merchantId the value for merchant_server_status.merchant_id, 关联商户编号
     */
    public void setMerchantId(Integer merchantId) {
        this.merchantId = merchantId;
    }

    /**
     * 获取 创建时间 字段:merchant_server_status.createtime
     *
     * @return merchant_server_status.createtime, 创建时间
     */
    public Date getCreatetime() {
        return createtime;
    }

    /**
     * 设置 创建时间 字段:merchant_server_status.createtime
     *
     * @param createtime the value for merchant_server_status.createtime, 创建时间
     */
    public void setCreatetime(Date createtime) {
        this.createtime = createtime;
    }

    /**
     * 获取 聚合支付状态：0表示未开启，1表示开启 字段:merchant_server_status.aggregatePayStatus
     *
     * @return merchant_server_status.aggregatePayStatus, 聚合支付状态：0表示未开启，1表示开启
     */
    public Integer getAggregatepaystatus() {
        return aggregatepaystatus;
    }

    /**
     * 设置 聚合支付状态：0表示未开启，1表示开启 字段:merchant_server_status.aggregatePayStatus
     *
     * @param aggregatepaystatus the value for merchant_server_status.aggregatePayStatus, 聚合支付状态：0表示未开启，1表示开启
     */
    public void setAggregatepaystatus(Integer aggregatepaystatus) {
        this.aggregatepaystatus = aggregatepaystatus;
    }

    /**
     * 获取 信用卡付款方式：0表示未开启；1表示开启 字段:merchant_server_status.creditCardStatus
     *
     * @return merchant_server_status.creditCardStatus, 信用卡付款方式：0表示未开启；1表示开启
     */
    public Integer getCreditcardstatus() {
        return creditcardstatus;
    }

    /**
     * 设置 信用卡付款方式：0表示未开启；1表示开启 字段:merchant_server_status.creditCardStatus
     *
     * @param creditcardstatus the value for merchant_server_status.creditCardStatus, 信用卡付款方式：0表示未开启；1表示开启
     */
    public void setCreditcardstatus(Integer creditcardstatus) {
        this.creditcardstatus = creditcardstatus;
    }

    /**
     * 获取 客户积累状态：0表示开启；1表示未开启 字段:merchant_server_status.customersAccumulateStatus
     *
     * @return merchant_server_status.customersAccumulateStatus, 客户积累状态：0表示开启；1表示未开启
     */
    public Integer getCustomersaccumulatestatus() {
        return customersaccumulatestatus;
    }

    /**
     * 设置 客户积累状态：0表示开启；1表示未开启 字段:merchant_server_status.customersAccumulateStatus
     *
     * @param customersaccumulatestatus the value for merchant_server_status.customersAccumulateStatus, 客户积累状态：0表示开启；1表示未开启
     */
    public void setCustomersaccumulatestatus(Integer customersaccumulatestatus) {
        this.customersaccumulatestatus = customersaccumulatestatus;
    }

    /**
     * 获取 多机收信息状态：0表示未开启，1表示开启 字段:merchant_server_status.phonesMessageStatus
     *
     * @return merchant_server_status.phonesMessageStatus, 多机收信息状态：0表示未开启，1表示开启
     */
    public Integer getPhonesmessagestatus() {
        return phonesmessagestatus;
    }

    /**
     * 设置 多机收信息状态：0表示未开启，1表示开启 字段:merchant_server_status.phonesMessageStatus
     *
     * @param phonesmessagestatus the value for merchant_server_status.phonesMessageStatus, 多机收信息状态：0表示未开启，1表示开启
     */
    public void setPhonesmessagestatus(Integer phonesmessagestatus) {
        this.phonesmessagestatus = phonesmessagestatus;
    }

    /**
     * 获取 网店开启状态：0表示开启；1表示未开启 字段:merchant_server_status.onlineStoreStatus
     *
     * @return merchant_server_status.onlineStoreStatus, 网店开启状态：0表示开启；1表示未开启
     */
    public Integer getOnlinestorestatus() {
        return onlinestorestatus;
    }

    /**
     * 设置 网店开启状态：0表示开启；1表示未开启 字段:merchant_server_status.onlineStoreStatus
     *
     * @param onlinestorestatus the value for merchant_server_status.onlineStoreStatus, 网店开启状态：0表示开启；1表示未开启
     */
    public void setOnlinestorestatus(Integer onlinestorestatus) {
        this.onlinestorestatus = onlinestorestatus;
    }

    /**
     * 获取 付前广告开启状态：0表示未开启，1表示已开启 字段:merchant_server_status.payBeforeAdvertisingStatus
     *
     * @return merchant_server_status.payBeforeAdvertisingStatus, 付前广告开启状态：0表示未开启，1表示已开启
     */
    public Integer getPaybeforeadvertisingstatus() {
        return paybeforeadvertisingstatus;
    }

    /**
     * 设置 付前广告开启状态：0表示未开启，1表示已开启 字段:merchant_server_status.payBeforeAdvertisingStatus
     *
     * @param paybeforeadvertisingstatus the value for merchant_server_status.payBeforeAdvertisingStatus, 付前广告开启状态：0表示未开启，1表示已开启
     */
    public void setPaybeforeadvertisingstatus(Integer paybeforeadvertisingstatus) {
        this.paybeforeadvertisingstatus = paybeforeadvertisingstatus;
    }

    /**
     * 获取 小票广告开启状态：0表示未开启，1表示已开启 字段:merchant_server_status.receiptsStatus
     *
     * @return merchant_server_status.receiptsStatus, 小票广告开启状态：0表示未开启，1表示已开启
     */
    public Integer getReceiptsstatus() {
        return receiptsstatus;
    }

    /**
     * 设置 小票广告开启状态：0表示未开启，1表示已开启 字段:merchant_server_status.receiptsStatus
     *
     * @param receiptsstatus the value for merchant_server_status.receiptsStatus, 小票广告开启状态：0表示未开启，1表示已开启
     */
    public void setReceiptsstatus(Integer receiptsstatus) {
        this.receiptsstatus = receiptsstatus;
    }

    /**
     * 获取 开地图点状态：0表示未开启，1表示已开启 字段:merchant_server_status.storeMapStatus
     *
     * @return merchant_server_status.storeMapStatus, 开地图点状态：0表示未开启，1表示已开启
     */
    public Integer getStoremapstatus() {
        return storemapstatus;
    }

    /**
     * 设置 开地图点状态：0表示未开启，1表示已开启 字段:merchant_server_status.storeMapStatus
     *
     * @param storemapstatus the value for merchant_server_status.storeMapStatus, 开地图点状态：0表示未开启，1表示已开启
     */
    public void setStoremapstatus(Integer storemapstatus) {
        this.storemapstatus = storemapstatus;
    }

    /**
     * 获取 销售统计状态：0表示未开启，1表示已开启 字段:merchant_server_status.salesStatisticsStatus
     *
     * @return merchant_server_status.salesStatisticsStatus, 销售统计状态：0表示未开启，1表示已开启
     */
    public Integer getSalesstatisticsstatus() {
        return salesstatisticsstatus;
    }

    /**
     * 设置 销售统计状态：0表示未开启，1表示已开启 字段:merchant_server_status.salesStatisticsStatus
     *
     * @param salesstatisticsstatus the value for merchant_server_status.salesStatisticsStatus, 销售统计状态：0表示未开启，1表示已开启
     */
    public void setSalesstatisticsstatus(Integer salesstatisticsstatus) {
        this.salesstatisticsstatus = salesstatisticsstatus;
    }

    /**
     * 获取 支付详情状态：0表示未开启，1表示已开启 字段:merchant_server_status.paymentDetailsStatus
     *
     * @return merchant_server_status.paymentDetailsStatus, 支付详情状态：0表示未开启，1表示已开启
     */
    public Integer getPaymentdetailsstatus() {
        return paymentdetailsstatus;
    }

    /**
     * 设置 支付详情状态：0表示未开启，1表示已开启 字段:merchant_server_status.paymentDetailsStatus
     *
     * @param paymentdetailsstatus the value for merchant_server_status.paymentDetailsStatus, 支付详情状态：0表示未开启，1表示已开启
     */
    public void setPaymentdetailsstatus(Integer paymentdetailsstatus) {
        this.paymentdetailsstatus = paymentdetailsstatus;
    }

    /**
     * 获取 服务联系状态:0表示未开启，1表示已开启 字段:merchant_server_status.serviceLinksStatus
     *
     * @return merchant_server_status.serviceLinksStatus, 服务联系状态:0表示未开启，1表示已开启
     */
    public Integer getServicelinksstatus() {
        return servicelinksstatus;
    }

    /**
     * 设置 服务联系状态:0表示未开启，1表示已开启 字段:merchant_server_status.serviceLinksStatus
     *
     * @param servicelinksstatus the value for merchant_server_status.serviceLinksStatus, 服务联系状态:0表示未开启，1表示已开启
     */
    public void setServicelinksstatus(Integer servicelinksstatus) {
        this.servicelinksstatus = servicelinksstatus;
    }

    /**
     * 获取 红包发券状态：0表示开启，1表示未开启 字段:merchant_server_status.grantRedpacketStatus
     *
     * @return merchant_server_status.grantRedpacketStatus, 红包发券状态：0表示开启，1表示未开启
     */
    public Integer getGrantredpacketstatus() {
        return grantredpacketstatus;
    }

    /**
     * 设置 红包发券状态：0表示开启，1表示未开启 字段:merchant_server_status.grantRedpacketStatus
     *
     * @param grantredpacketstatus the value for merchant_server_status.grantRedpacketStatus, 红包发券状态：0表示开启，1表示未开启
     */
    public void setGrantredpacketstatus(Integer grantredpacketstatus) {
        this.grantredpacketstatus = grantredpacketstatus;
    }

    /**
     * 获取 信息群发状态：0表示未开启，1表示已开启 字段:merchant_server_status.groupsStatus
     *
     * @return merchant_server_status.groupsStatus, 信息群发状态：0表示未开启，1表示已开启
     */
    public Integer getGroupsstatus() {
        return groupsstatus;
    }

    /**
     * 设置 信息群发状态：0表示未开启，1表示已开启 字段:merchant_server_status.groupsStatus
     *
     * @param groupsstatus the value for merchant_server_status.groupsStatus, 信息群发状态：0表示未开启，1表示已开启
     */
    public void setGroupsstatus(Integer groupsstatus) {
        this.groupsstatus = groupsstatus;
    }

    /**
     * 获取 付后广告状态：0表示未开启，1表示已开启 字段:merchant_server_status.payAfterAdvertisingStatus
     *
     * @return merchant_server_status.payAfterAdvertisingStatus, 付后广告状态：0表示未开启，1表示已开启
     */
    public Integer getPayafteradvertisingstatus() {
        return payafteradvertisingstatus;
    }

    /**
     * 设置 付后广告状态：0表示未开启，1表示已开启 字段:merchant_server_status.payAfterAdvertisingStatus
     *
     * @param payafteradvertisingstatus the value for merchant_server_status.payAfterAdvertisingStatus, 付后广告状态：0表示未开启，1表示已开启
     */
    public void setPayafteradvertisingstatus(Integer payafteradvertisingstatus) {
        this.payafteradvertisingstatus = payafteradvertisingstatus;
    }

    /**
     * 获取 是否有效：0表示无效，1表示有效 字段:merchant_server_status.isdelete
     *
     * @return merchant_server_status.isdelete, 是否有效：0表示无效，1表示有效
     */
    public Integer getIsdelete() {
        return isdelete;
    }

    /**
     * 设置 是否有效：0表示无效，1表示有效 字段:merchant_server_status.isdelete
     *
     * @param isdelete the value for merchant_server_status.isdelete, 是否有效：0表示无效，1表示有效
     */
    public void setIsdelete(Integer isdelete) {
        this.isdelete = isdelete;
    }

    /**
     * 获取 商家红包券手续费 字段:merchant_server_status.redPackagePay
     *
     * @return merchant_server_status.redPackagePay, 商家红包券手续费
     */
    public Double getRedpackagepay() {
        return redpackagepay;
    }

    /**
     * 设置 商家红包券手续费 字段:merchant_server_status.redPackagePay
     *
     * @param redpackagepay the value for merchant_server_status.redPackagePay, 商家红包券手续费
     */
    public void setRedpackagepay(Double redpackagepay) {
        this.redpackagepay = redpackagepay;
    }
}